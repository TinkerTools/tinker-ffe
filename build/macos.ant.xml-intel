<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="make" name="Force Field Explorer for MacOS">

	<tstamp />
	<property name="platform" value="macos" />
	<buildnumber file="${platform}.build.number" />
	<property name="version" value="8.10" />
	<property name="kit.dir" value="kits" />
	<property name="build.log"
		value="${kit.dir}/build_${version}.${build.number}.log" />
	<property name="error.log"
		value="${kit.dir}/error_${version}.${build.number}.log" />

	<property name="ffe.dir" value="${basedir}/ffe" />
	<property name="jni.dir" value="${ffe.dir}/native" />
	<property name="jni_md.dir" value="${ffe.dir}/native/${platform}" />

	<property name="tinker.dir" value="${basedir}/tinker" />
	<property name="tinker.src.dir" value="${tinker.dir}/source" />
	<property name="tinker.bin.dir" value="${tinker.dir}/bin" />

	<property name="fftw.dir" value="${basedir}/fftw" />
	<property name="fftw.lib.dir" value="${fftw.dir}/lib" />

	<property name="apbs.dir" value="${basedir}/apbs" />
	<property name="apbs_src.dir" value="${basedir}/apbs_src" />
	<property name="apbs.bin.dir" value="${apbs.dir}/bin" />
	<property name="apbs.lib.dir" value="${apbs.dir}/lib" />
	<property name="apbs.include.dir" value="${apbs.dir}/include" />

	<property name="fc" value="/opt/intel/bin/ifort" />
	<property name="fortran.flags" value="-O3 -axSSSE3 -no-ipo -no-prec-div -mdynamic-no-pic -assume cc_omp -openmp" />
	<property name="cc" value="/opt/intel/bin/icc" />
	<property name="c.flags" value="-O3 -axSSSE3 -no-ipo" />
	<property name="tinker.libs"
		value="-ltinker -lapbsmainroutines -lapbs -lmaloc -lapbsblas -lfftw3 -lfftw3_threads" />
	<property name="tinker.include.flags"
		value="-I${tinker.src.dir} -I${apbs.include.dir} -I${jni.dir} -I${jni_md.dir}" />
	<property name="tinker.link.flags"
		value="-O3 -no-ipo -no-prec-div -openmp -static-intel -mmacosx-version-min=10.6 -L. -L${apbs.lib.dir} -L${fftw.lib.dir} ${tinker.libs} -framework JavaVM -framework CoreFoundation" />
	<property name="apbs.c.flags" value="${c.flags} -DVAPBSQUIET" />
	<property name="apbs.f.flags" value="${fortran.flags} -DVAPBSQUIET" />
	<property environment="env" />

	<target name="info" description="Print Platform Details">
		<echo message="General Build Information:" />
		<echo message="Developer: ${user.name}" />
		<echo message="Build File: ${ant.file}" />
		<echo message="OS: ${os.name} version ${os.version} on ${os.arch}" />
		<echo message="JVM: ${java.vendor} ${java.vm.name} version ${java.version}" />

		<echo message="Compiler Information:" />
		<echo message="Fortran Compiler: ${fc}" />
		<echo message="Fortran Flags: ${fortran.flags}" />
		<echo message="C Compiler: ${cc}" />
		<echo message="C Flags: ${c.flags}" />

		<echo message="Tinker Build Information:" />
		<echo message="Directory: ${tinker.dir}" />
		<echo message="Source: ${tinker.src.dir}" />
		<echo message="Include Flags: ${tinker.include.flags}" />
		<echo message="Link Flags: ${tinker.link.flags}" />
		<echo message="Link Libraries: ${tinker.libs}" />

		<echo message="FFTW Build Information:" />
		<echo message="Directory: ${fftw.dir}" />

		<echo message="APBS Build Information:" />
		<echo message="Directory: ${apbs.dir}" />
		<echo message="C Flags: ${apbs.c.flags}" />
		<echo message="Fortran Flags: ${apbs.f.flags}" />

		<echo message="FFE Build Information:" />
		<echo message="Directory: ${ffe.dir}" />
	</target>

	<target name="init">
		<delete verbose="true"
			includeemptydirs="true"
			failonerror="false" >
			<fileset dir="${ffe.dir}" defaultexcludes="no" />
		</delete>
		<delete verbose="true"
			includeemptydirs="true"
			failonerror="false" >
			<fileset dir="${tinker.dir}" defaultexcludes="no" />
		</delete>
		<delete verbose="true"
			includeemptydirs="true"
			failonerror="false" >
			<fileset dir="${fftw.dir}" defaultexcludes="no" />
		</delete>
		<delete verbose="true"
			includeemptydirs="true"
			failonerror="false" >
			<fileset dir="${apbs.dir}" defaultexcludes="no" />
		</delete>
		<delete verbose="true"
			includeemptydirs="true"
			failonerror="false" >
			<fileset dir="${apbs_src.dir}" defaultexcludes="no" />
		</delete>

		<echo level="info" message="Create Tinker Directories" />
		<mkdir dir="${tinker.dir}" />
		<mkdir dir="${tinker.bin.dir}" />
		<echo level="info" message="Create APBS Directories" />
		<mkdir dir="${apbs.dir}" />
		<mkdir dir="${apbs.include.dir}" />
		<mkdir dir="${apbs.include.dir}/maloc" />
		<mkdir dir="${kit.dir}" />
		<echoproperties destfile="${build.log}" format="text" />
		<echoproperties format="text" />
	</target>

	<target name="sync-source"
	        depends="init"
	        description="Sync Local Sources with Remote Repositories" >

		<echo level="info" message="Syncing Source Files" />
		<copy file="../source/ffe.tgz" todir="." />
		<copy file="../source/tinker.tgz" todir="." />
		<copy file="../source/fftw.tgz" todir="." />
		<copy file="../source/apbs.tgz" todir="." />
		<untar src="ffe.tgz" dest="." compression="gzip" />
		<untar src="tinker.tgz" dest="." compression="gzip" />
		<untar src="fftw.tgz" dest="." compression="gzip" />
		<untar src="apbs.tgz" dest="." compression="gzip" />
	</target>

	<target name="configfftw"
		description="Configure FFTW" >

		<echo level="info" message="Configuring FFTW" />
		<chmod file="fftw/configure" perm="+x" />
		<chmod file="fftw/install-sh" perm="+x" />
		<exec dir="${fftw.dir}"
			executable="/bin/bash"
			newenvironment="false"
			failonerror="true"
			output="${build.log}"
			error="${error.log}"
			append="true" >

			<env key="BASH_ENV" value="/etc/bashrc" />
			<env key="CC" value="${cc}" />
			<env key="CXX" value="${cc}" />
			<env key="F77" value="${fc}" />
			<env key="LDFLAGS" value="" />
			<arg value="-c" />
			<arg value="./configure --prefix=${fftw.dir} --enable-threads" />
		</exec>
	</target>

	<target name="makefftw"
		depends="configfftw"
		description="Compile, Link and Install FFTW" >

		<echo level="info" message="Making FFTW" />
		<exec dir="${fftw.dir}"
			executable="/bin/bash"
			newenvironment="false"
			failonerror="true"
			output="${build.log}"
			append="true"
			error="${error.log}" >

			<env key="BASH_ENV" value="/etc/bashrc" />
			<arg value="-c" />
			<arg value="make" />
		</exec>

		<echo level="info" message="Installing FFTW" />
		<exec dir="${fftw.dir}"
			executable="/bin/bash"
			newenvironment="false"
			failonerror="true"
			output="${build.log}"
			append="true"
			error="${error.log}" >

			<env key="BASH_ENV" value="/etc/bashrc" />
			<arg value="-c" />
			<arg value="make install" />
		</exec>
	</target>

	<target name="configapbs"
		description="Configure APBS" >

		<echo level="info" message="Configuring APBS" />
		<chmod file="apbs_src/configure" perm="+x" />
		<chmod file="apbs_src/config/install-sh" perm="+x" />
		<chmod file="apbs_src/contrib/maloc/configure" perm="+x" />
		<chmod file="apbs_src/contrib/maloc/config/install-sh" perm="+x" />
		<exec dir="${apbs_src.dir}"
			executable="/bin/bash"
			newenvironment="false"
			failonerror="true"
			output="${build.log}"
			error="${error.log}"
			append="true" >

			<env key="BASH_ENV" value="/etc/bashrc" />
			<env key="CC" value="${cc}" />
			<env key="CXX" value="${cc}" />
			<env key="F77" value="${fc}" />
			<env key="LDFLAGS" value="" />
			<env key="FFLAGS" value="${apbs.f.flags}" />
			<env key="CFLAGS" value="${apbs.c.flags}" />
			<env key="CXXFLAGS" value="${apbs.c.flags}" />
			<arg value="-c" />
			<arg value="./configure --prefix=${apbs.dir} --enable-tinker --disable-zlib" />
		</exec>
	</target>

	<target name="makeapbs"
		depends="configapbs"
		description="Compile, Link and Install APBS" >

		<echo level="info" message="Making APBS" />
		<exec dir="${apbs_src.dir}"
			executable="/bin/bash"
			newenvironment="false"
			failonerror="true"
			output="${build.log}"
			append="true"
			error="${error.log}" >

			<env key="BASH_ENV" value="/etc/bashrc" />
			<arg value="-c" />
			<arg value="make" />
		</exec>

		<echo level="info" message="Installing APBS" />
		<exec dir="${apbs_src.dir}"
			executable="/bin/bash"
			newenvironment="false"
			failonerror="true"
			output="${build.log}"
			append="true"
			error="${error.log}" >

			<env key="BASH_ENV" value="/etc/bashrc" />
			<arg value="-c" />
			<arg value="make install" />
		</exec>
		<copy todir="${apbs.include.dir}/maloc" overwrite="true" verbose="true">
			<fileset dir="${apbs_src.dir}/contrib/include/maloc" includes="*.h" />
		</copy>
		<copy todir="${apbs.lib.dir}" overwrite="true" verbose="true">
			<fileset dir="${apbs_src.dir}/contrib/lib" includes="libmaloc.a" />
		</copy>
		<copy todir="${apbs.lib.dir}" overwrite="true" verbose="true">
			<fileset dir="${apbs_src.dir}/contrib/lib" includes="libapbsblas.a" />
		</copy>
	</target>

	<target name="maketinker"
		depends="makefftw,makeapbs"
		description="Compile and Link Tinker" >

		<echo level="info" message="Compiling Tinker" />
		<copy file="${tinker.dir}/make/Makefile-ffe-${platform}-intel" todir="${tinker.src.dir}"/>
		<exec dir="${tinker.src.dir}" executable="make">
			<arg line="-f Makefile-ffe-${platform}-intel all" />
		</exec>
		<copy todir="${tinker.bin.dir}">
			<fileset dir="${tinker.src.dir}" includes="*.x" />
			<mapper type="glob" from="*.x" to="*" />
		</copy>
		<delete>
			<fileset dir="${tinker.src.dir}" includes="*.o *.mod *.a *.x Makefile*" />
		</delete>
	</target>

	<target name="ffe">
		<echo level="info" message="Build Force Field Explorer" />
		<ant dir="ffe" target="make" />
	</target>

	<taskdef name="install4j"
		classname="com.install4j.Install4JTask"
		classpath="/Applications/install4j6/bin/ant.jar" />

	<target name="kits"
		depends="ffe"
		description="Build an FFE Installer Kit" >

		<echo level="info" message="Kit Build Number ${build.number}" />
		<install4j projectfile="${platform}.install4j" verbose="false">
			<variable name="date.stamp" value="${DSTAMP}" />
			<variable name="time.stamp" value="${TSTAMP}" />
			<variable name="build.number" value="${build.number}" />
		</install4j>
		<gzip src="${build.log}" destfile="${build.log}.gz" />
		<gzip src="${error.log}" destfile="${error.log}.gz" />
		<delete file="${build.log}" />
		<delete file="${error.log}" />
	</target>

	<target name="make"
		depends="info,sync-source,maketinker,kits"
		description="Build of FFE from Source Code" />

</project>
